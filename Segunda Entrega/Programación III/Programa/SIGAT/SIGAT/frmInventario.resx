<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmd_Volver.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAARaSURBVFhH7Zb7T1NnGMf9W/bDliybCcu2OGiBIjcZAQkX
        gTHGxaI4O5Ah4jZgyOjiJGPEwXAMZIgMDGW0CGOsIKAFxJaWm1xEboJW6KDKtYJ8d56XnBMWU0lYzg9L
        bPLJOe95L8/nfZ7TN2ffvle//1MGEm554ZwxFlkmObJNx6A0xQtk9RxHhiEOR1s8IdqeTt70wo0n9bi9
        0oI+WxfubZowuXWXMbzRA+O6DtHNHuIJnGjzFARM6x0YeqZnEqMbJgzYbkO/2o6Pm9zFEzjWui2gW2pi
        wUiCAhPGNR3LTHijiAJU32arGm2cROeyFndWWpkIQcFJTFQBqm/TQrUgQQE7l/9i0D2JhTQcFK8EVN+G
        vyuhXawRJCgo0WrVsOeB9SIL1FnKmQRlggLupHGhCgF1bnvPANWYoFQTtGMeqm18exBq50tx3VKGBstV
        UEAekiK56OYg+Krd4FMrYxz6fRsPlSvjYLWrfUH5TV+kDMqROfoZzt9PQd5kOn6eVqJkJgdXH+XhmrkQ
        NXO/QD1fwiR4Ef6enlM/jaPxNK9gKhs/TGTg27FUpI8kwq/ex75AVKs3Tg1E/kugcDoTxTPnUf4wF1Xm
        i1A9LkDt3CUmUWfZhu754NT/m/lHXOHG0zwSyJ1Ig3LsNNucu/olGQjWSuGpexvB3U5IHDjCTVKABEpm
        lCibvcB2tVOCRHZCwa+Z89k4Gk/ZyxlPQfJgJML0bnBuewNOqgP2MxCilSGw+wDHewjiCDd8gAiDI04N
        +nNZiebKEo+fps9yQiSVidLZc6g057ArtYseZCB/KgXf3JMjaTAQUT1ubB3/Lgf4djrAp8NhdwGa9JFB
        wgLHmKSI63VFfJ8MigF3TsQTSXe9kTzkjdPDhwSoTc+pn8bReHmvC6KMErYJkiBC7kggUUntZyBU64GT
        /X6INclYcD4wLU4BU4c/xBcjvkgb9XsBek79JLNThNahzdCmYoxeuwucGQrFp/1eLDgtRAvyQTPHAkBk
        jwdCOR4kQG2+j+R4ET4bJEGbUvQfhrNKZj8DYVpvodb5U5+jeDaNe6GyUD33HdSWXO4AyucOoEJ8PxX2
        Ahcmj7B+jSWPja8wZ7P59E7kjCvYurS5lwrwBwh/ePAHCB0eRFhjAG49LUPBTCQKZz8RoPbFBxFos16G
        v8Yf75c7450yqcD+UimIty5L8GaxZO8npbTSBYblapSYY/Hr46MC1C56GI3upSoWVLQvIhIYXKtHxfxx
        VFlOCFCbhHpXNeIKOFa4YMzWjJoFBdSLCdBYE9mV2iQ0vN7EUi1aBqi20xs6/PEkCX8+TRagtsaagAlb
        +3+r8W7m715xxqNNPW6spKJ99axAy/IZJjOz0SWuAL1glue96Fj/Ct22dOiffc2uurUvQRLmzR68XuQk
        XgmovovcJ/jS1n2sYlqA2tatEcw/78NrlxzFE6D/cURDLCLq5Yzw63GM0Do5gjUxDFEFdntHXvXvJQP/
        AJurpcLz7qAEAAAAAElFTkSuQmCC
</value>
  </data>
</root>
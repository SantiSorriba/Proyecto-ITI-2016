<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>